Type.registerNamespace('Accela.ACA.Web.WebService');
Accela.ACA.Web.WebService.AnnouncementService=function() {
Accela.ACA.Web.WebService.AnnouncementService.initializeBase(this);
this._timeout = 0;
this._userContext = null;
this._succeeded = null;
this._failed = null;
}
Accela.ACA.Web.WebService.AnnouncementService.prototype={
_get_path:function() {
 var p = this.get_path();
 if (p) return p;
 else return Accela.ACA.Web.WebService.AnnouncementService._staticInstance.get_path();},
GetAnnouncementByTimer:function(succeededCallback, failedCallback, userContext) {
return this._invoke(this._get_path(), 'GetAnnouncementByTimer',false,{},succeededCallback,failedCallback,userContext); },
GetAnnouncementOfSession:function(succeededCallback, failedCallback, userContext) {
return this._invoke(this._get_path(), 'GetAnnouncementOfSession',false,{},succeededCallback,failedCallback,userContext); },
UpdateAnnouncementStatus:function(announcementId,succeededCallback, failedCallback, userContext) {
return this._invoke(this._get_path(), 'UpdateAnnouncementStatus',false,{announcementId:announcementId},succeededCallback,failedCallback,userContext); }}
Accela.ACA.Web.WebService.AnnouncementService.registerClass('Accela.ACA.Web.WebService.AnnouncementService',Sys.Net.WebServiceProxy);
Accela.ACA.Web.WebService.AnnouncementService._staticInstance = new Accela.ACA.Web.WebService.AnnouncementService();
Accela.ACA.Web.WebService.AnnouncementService.set_path = function(value) { Accela.ACA.Web.WebService.AnnouncementService._staticInstance.set_path(value); }
Accela.ACA.Web.WebService.AnnouncementService.get_path = function() { return Accela.ACA.Web.WebService.AnnouncementService._staticInstance.get_path(); }
Accela.ACA.Web.WebService.AnnouncementService.set_timeout = function(value) { Accela.ACA.Web.WebService.AnnouncementService._staticInstance.set_timeout(value); }
Accela.ACA.Web.WebService.AnnouncementService.get_timeout = function() { return Accela.ACA.Web.WebService.AnnouncementService._staticInstance.get_timeout(); }
Accela.ACA.Web.WebService.AnnouncementService.set_defaultUserContext = function(value) { Accela.ACA.Web.WebService.AnnouncementService._staticInstance.set_defaultUserContext(value); }
Accela.ACA.Web.WebService.AnnouncementService.get_defaultUserContext = function() { return Accela.ACA.Web.WebService.AnnouncementService._staticInstance.get_defaultUserContext(); }
Accela.ACA.Web.WebService.AnnouncementService.set_defaultSucceededCallback = function(value) { Accela.ACA.Web.WebService.AnnouncementService._staticInstance.set_defaultSucceededCallback(value); }
Accela.ACA.Web.WebService.AnnouncementService.get_defaultSucceededCallback = function() { return Accela.ACA.Web.WebService.AnnouncementService._staticInstance.get_defaultSucceededCallback(); }
Accela.ACA.Web.WebService.AnnouncementService.set_defaultFailedCallback = function(value) { Accela.ACA.Web.WebService.AnnouncementService._staticInstance.set_defaultFailedCallback(value); }
Accela.ACA.Web.WebService.AnnouncementService.get_defaultFailedCallback = function() { return Accela.ACA.Web.WebService.AnnouncementService._staticInstance.get_defaultFailedCallback(); }
Accela.ACA.Web.WebService.AnnouncementService.set_enableJsonp = function(value) { Accela.ACA.Web.WebService.AnnouncementService._staticInstance.set_enableJsonp(value); }
Accela.ACA.Web.WebService.AnnouncementService.get_enableJsonp = function() { return Accela.ACA.Web.WebService.AnnouncementService._staticInstance.get_enableJsonp(); }
Accela.ACA.Web.WebService.AnnouncementService.set_jsonpCallbackParameter = function(value) { Accela.ACA.Web.WebService.AnnouncementService._staticInstance.set_jsonpCallbackParameter(value); }
Accela.ACA.Web.WebService.AnnouncementService.get_jsonpCallbackParameter = function() { return Accela.ACA.Web.WebService.AnnouncementService._staticInstance.get_jsonpCallbackParameter(); }
Accela.ACA.Web.WebService.AnnouncementService.set_path("/citizenaccess/WebService/AnnouncementService.asmx");
Accela.ACA.Web.WebService.AnnouncementService.GetAnnouncementByTimer= function(onSuccess,onFailed,userContext) {Accela.ACA.Web.WebService.AnnouncementService._staticInstance.GetAnnouncementByTimer(onSuccess,onFailed,userContext); }
Accela.ACA.Web.WebService.AnnouncementService.GetAnnouncementOfSession= function(onSuccess,onFailed,userContext) {Accela.ACA.Web.WebService.AnnouncementService._staticInstance.GetAnnouncementOfSession(onSuccess,onFailed,userContext); }
Accela.ACA.Web.WebService.AnnouncementService.UpdateAnnouncementStatus= function(announcementId,onSuccess,onFailed,userContext) {Accela.ACA.Web.WebService.AnnouncementService._staticInstance.UpdateAnnouncementStatus(announcementId,onSuccess,onFailed,userContext); }
